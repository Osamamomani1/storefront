{"ast":null,"code":"var _jsxFileName = \"/home/osama/401/frontend/storefront/src/components/storefront/products.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\n\nconst Products = props => {\n  _s();\n\n  const classes = useStyle();\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: props.products.map(product => {\n      if (props.activeCategory === pr.category) {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.cardMedia,\n              image: product.img,\n              title: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.cardContent,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"Category: \", product.category, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 50\n                }, this), \"Price: \", product.price, \" Jd \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 47\n                }, this), \"Inventory: \", product.inventory]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, product.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"eTC39ZLyyKld6i5R1gil2d/OHGM=\", false, function () {\n  return [useStyle];\n});\n\n_c = Products;\n\nconst mapStateToProps = state => ({\n  products: state.productsReducer.products,\n  activeCategory: state.categoriesReducer.active\n});\n\nexport default connect(mapStateToProps)(Products);\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/osama/401/frontend/storefront/src/components/storefront/products.js"],"names":["React","Button","Card","CardActions","CardContent","CardMedia","Grid","Typography","Container","makeStyles","connect","useStyle","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","Products","props","classes","console","log","products","map","product","activeCategory","pr","category","img","name","price","inventory","mapStateToProps","state","productsReducer","categoriesReducer","active"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nconst useStyle = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\nconst Products = (props) => {\nconst classes = useStyle();\nconsole.log(props);\n  return (\n    <section>\n      {props.products.map((product) => {\n        if (props.activeCategory===pr.category) {\n          return (\n            <Grid item key={product.name} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={product.img}\n                  title={product.name}\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {product.name}\n                  </Typography>\n                  <Typography>\n                    Category: {product.category} <br />\n                    Price: {product.price} Jd <br />\n                    Inventory: {product.inventory}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    View\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    Add to Cart\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          );\n        }\n        \n      })}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  products: state.productsReducer.products,\n  activeCategory: state.categoriesReducer.active\n});\n\nexport default connect(mapStateToProps)(Products);"]},"metadata":{},"sourceType":"module"}